package assign2.command;

import assign2.exceptions.*;
import assign2.MovieDatabase;

public abstract class AbstractCommand implements Command {
	@Override
	public void apply(MovieDatabase db, String args) throws DatabaseException {
		String[] arga = parse(args);
		queryDatabase(db, arga);
	}

	private String[] parse(String args) throws CommandParseException {
		if (args.isEmpty()) {
			return new String[] {};
		} else {
			// FIXME implement this
			// Parse the input appropriately.
			// You may need to change the return value.
			//fixed ver.
			int cmdindex = args.indexOf("%");
			String cmd = cmdindex < 0 ? input.toUpperCase() : input.substring(0, cmdindex).toUpperCase();
			cmd = cmd.trim();

			if (cmd.equals("QUIT"))
				break;

			Command command = commands.get(cmd);

			if (command == null)
				throw new CommandNotFoundException(cmd);

			String arguments = cmdindex < 0 ? "" : input.substring(cmdindex);
			//end

			/*previous source code - delete comments
			String[] inputs = input.split(" ", 2);

			String cmd = inputs[0].toUpperCase();

			if (cmd.equals("QUIT"))
				break;

			Command command = commands.get(cmd);

			if (command == null)
				throw new CommandNotFoundException(cmd);

			String arguments = inputs.length > 1 ? inputs[1] : "";
			*/
			
			
			
			return args.split(" ");
		}
	}

	protected abstract void queryDatabase(MovieDatabase db, String[] arga) throws DatabaseException;
}
